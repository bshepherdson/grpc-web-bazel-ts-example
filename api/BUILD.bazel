load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_typescript//:index.bzl", "ts_library")

exports_files(["tsconfig.json"], visibility = ["//visibility:public"])

ts_library(
    name = "api_lib",
    srcs = glob(["*.ts"]),
    deps = [
        "@npm//@types/node",
        "@npm//grpc",
        "//proto:greeter_proto_ts",
    ],
    tsconfig = ":tsconfig.json",
)

rollup_bundle(
    name = "api_bundle",
    entry_point = "main.ts",
    deps = [
        ":api_lib",
    ],
    format = "cjs",
)

RUNTIME_DEPS = [
    "@npm//google-protobuf",
    "@npm//grpc",
    "//proto:greeter_proto_ts",
    ":api_bundle.js",
]

nodejs_binary(
    name = "dev",
    data = RUNTIME_DEPS,
    entry_point = "api_bundle.js",
    visibility = ["//:__pkg__"],
)

nodejs_image(
    name = "api",
    data = RUNTIME_DEPS,
    entry_point = "api_bundle.js",
    # TODO: I thought ports needed to be explicitly exported? container_image()
    # supports that but apparently the Node.js one doesn't forward that
    # parameter?
    #ports = ["5051"],
)


sh_binary(
    name = "proxy",
    srcs = ["proxy.sh"],
    data = ["@grpcwebproxy//:dist/grpcwebproxy-v0.12.0-linux-x86_64"],
)


